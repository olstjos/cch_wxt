<?php


use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;

/**
 * @file
 * WxT Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

/**
 * Implements hook_theme_suggestions_HOOK_alter for blocks.
 */
function cch_wxt_theme_suggestions_block_alter(&$suggestions, $variables) {

  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    //echo "<h1>$suggestion</h1>";
    $suggestion = str_replace('cch_wxt_', 'wxt_bootstrap_', $suggestion);
    //echo "<h1>$suggestion</h1>";
  }
  \Drupal::messenger()->addMessage('keys:' . print_r(dump($suggestions, TRUE)), TRUE);//Very good for debugging.
  $current_route = \Drupal::routeMatch()->getRouteName();
  if ($current_route == 'view.sector_browse.page_2') {
    $path = \Drupal::request()->getpathInfo();
    $arg  = explode('/',$path);
    if (isset($arg[4]) && is_numeric($arg[5])) {
      $tid = $arg[5];
    }
    else {
      // This throws a warning for some reason, but is a good fallback.
      $tid = \Drupal::request()->get('arg_0');
    }
    if (is_numeric($tid)) {
      if (isset($form['tid'])) {
        $term = \Drupal\taxonomy\Entity\Term::load($tid);
      }
    }

  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter for page.
 */
/*
function cch_wxt_theme_suggestions_page_alter(&$suggestions, $variables) {

  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('cch_wxt_', 'wxt_bootstrap_', $suggestion);
    echo "<h1>$suggestion</h1>" . '<br/>';
  }
}
*/

function cch_wxt_preprocess_page_title(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name=='view.sector_browse.page_2') {
    $variables['title'] = t('Explore category results');
  }
}

function cch_wxt_preprocess(&$variables, $hook) {
  $variables['base_path'] = base_path();
}


/**
 * Implements template_preprocess_views_view_field().
 */
function cch_wxt_preprocess_views_view_field(&$variables) {
  $view = $variables['view'];
  $field = $variables['field'];

  if ($view->id() == 'sector_browse' && $view->current_display == 'page_2') {
    $nid = $variables['row']->nid;
    // Sector results
    switch($field->field)
    {
      case 'title':
        $node = Node::load($nid);
        $isOtherLang = $node->field_link_other_lang->getString() == 1;

        if ($isOtherLang) {
          $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
          if ($language == 'fr') {
            $variables['output'] .= sprintf(' (%s)', 'en anglais seulement');
          }
          else {
            $variables['output'] .= sprintf(' (%s)', 'French only');
          }
          $variables['output'] = \Drupal\Core\Render\Markup::create($variables['output']);
        }
        break;
      default:
        break;
    }

  } else if (1==2 && $view->id() == 'sector_browse' && $view->current_display == 'attachment_1') {
    $nid = $variables['row']->nid;
    switch($field->field)
    {
      case 'name':
      case 'field_image_sector':
        $regexp = '/sector\/term\/(\d+)?/is';
        if ( preg_match($regexp, $variables['output'], $matches) ) {
          $tid = $matches[1];
          $children = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadChildren($tid);
          $hasChildren = count($children) > 0;

          if (!$hasChildren) {
            $output = str_replace("sector/term", "sector/term/results", $variables['output']);
            $variables['output'] = \Drupal\Core\Render\Markup::create($output);
          }
        }
        break;
    }
  }
}

/**
 * Implements template_preprocess_views_view_table().
 */
function cch_wxt_preprocess_views_view_table(&$variables) {
  $view = $variables['view'];

  // Set header for results
  if ($view->id() == 'sector_browse' && $view->current_display == 'page_2') {
    $variables['header'] = [
      'consumer-info' => [
        'default_classes' => true,
        'content' => t('Consumer Information')
      ]
    ];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function cch_wxt_preprocess_breadcrumb(&$variables) {
  $request = \Drupal::request();
  $route_match = \Drupal::routeMatch();
  $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());
  $term = $route_match->getParameters();

  if ( $route_match->getParameter('view_id') && $route_match->getParameter('display_id') && $route_match->getParameter('arg_0') ) {
    /*
    $tid = $route_match->getParameter('arg_0');
    $tree = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('sector');
    foreach ($tree as $term) {
      $termID[] = [
        'termId' => $term->tid,
        'parent'=> reset($term->parents),
        'depth' => $term->depth
      ];
    }

    $parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents(3);
    $parent = reset($parent);
    echo get_class( $parent);
    print "<pre>";
    print_r($tree);
    die();
    */
  }

  /*
  $variables['#cache']['contexts'][] = 'url';
  if (count($variables['breadcrumb']) <= 1) {
    $variables['breadcrumb'] = [];
  } else {
    $breadcrumb_title = theme_get_setting('breadcrumb_title');
    if ($breadcrumb_title) {
      $variables['breadcrumb'][] = array(
        'text' => $page_title
      );
    }
  }
  */
}


/**
 * Implements template_preprocess_field().
 */
function cch_wxt_preprocess_field__node__field_sector(&$variables) {
  $element = $variables['element'];
  //\Drupal::messenger()->addMessage('keys:' . print_r(dump(array_keys($element['#items']), TRUE)), TRUE);//Very good for debugging
  //\Drupal::messenger()->addMessage('keys:' . print_r(dump($element['#items'], TRUE)), TRUE);//Very good for debugging

}


/**
 * Implements template_preprocess_views_view().
 */
function cch_wxt_preprocess_views_view(&$variables) {
  $view = $variables['view'];
  $request = \Drupal::request();
  $routeMatch = \Drupal::routeMatch();
  $params = $routeMatch->getParameters();

  if ($view->id() == 'sector_browse' && $view->current_display == 'page_1') {
    $tid = $routeMatch->getParameter('arg_0');
    $termSector = Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
    /*
    print "<pre>";
    print_r( array_keys($variables) );
    die();
    */

    // If provincial sector, show the provincial exposed filter
    if ($termSector->field_provincial->value) {
      $variables['attachment_before'] = '';
    } else {
      $variables['exposed'] = '';
    }
    /*



    echo $tid;die();
    print "<pre>";
    print_r($params);
    print_r( array_keys($variables['exposed']) );
    print_r( array_keys($variables) );
    die();
    */
  }
  if($view->id() == 'features'){
   // print_r($variables);

  }
}

function cch_wxt_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-sector-browse-page-1') {
    $current_path = \Drupal::service('path.current')->getPath();
    $path_args = explode('/', $current_path);

    foreach($path_args as $args){
      if (is_numeric($args)) {
        $tid=$args;
      }
    }

    if($tid){
      $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);

      $name = $term->label();

      $form['actions']['submit']['#value']=t($name);
      $form['#action'] = str_replace('sector/term', 'sector/term/results', $form['#action']);

    }

  } else if ($form_id == 'search_form') {
    //$form_state['keywords']['#required'] = false;
    //$form_state['keywords-fieldset']['or']['#required'] = false;
    $form['advanced']['keywords']['#required'] = false;
    $form['advanced']['keywords-fieldset']['keywords']['or']['#required'] = false;
    /*
    print "<pre>";
    print_r( get_class($form_state) );
    print_r( ($form['advanced']) );
    die();
    unset($form);
    */
  }
}

function cch_wxt_preprocess_search_result(&$variables) {
  $node = $variables['result']['node'];

  $variables['external'] = false;
  if ($node->bundle() == 'info_link' || $node->bundle() == 'complaint_link') {
    $url = $node->bundle() == 'info_link' ? $node->field_link_info->getString():$node->field_link_complaint->getString();
    $variables['url'] = $url;
    $variables['external'] = true;
    $variables['description'] = strip_tags($node->body->value);
    if($node->field_source->value){
      $variables['source'] = strip_tags($node->field_source->value);
    }

    // Sector
    $sectorTerms = $node->get('field_sector')->referencedEntities();
    $sectors = [];
    foreach ($sectorTerms as $term) {
      $sectors[] = $term->label();
    }
    $variables['sectors'] = implode(', ', $sectors);

    // Province
    $provinceTerms = $node->get('field_province')->referencedEntities();
    $provinces = [];
    foreach ($provinceTerms as $term) {
      $provinces[] = $term->label();
    }
    $variables['provinces'] = implode(', ', $provinces);
  }

  /*
  print "<pre>";
  print_r( $variables['info'] );
  print_r( $variables['snippet'] );
  print_r( array_keys($variables) );
  die();
  */
}

/**
 * @param $machine_name
 *
 * @return \Drupal\block_content\Entity\BlockContent|\Drupal\Core\Entity\EntityInterface|null
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function getBlockContentByMachineName($machine_name) {
  // Get the block id from machine name.
  $query_result = \Drupal::entityTypeManager()
    ->getStorage('block_content')
    ->getQuery()
    ->condition('machine_name', $machine_name)
    ->range(0, 1)
    ->execute();
  // Get the block id.
  $block_id = reset($query_result);
  if ($block_id) {
    $block = \Drupal\block_content\Entity\BlockContent::load($block_id);
    return $block;
  }
  else {
    return NULL;
  }
}
function cch_wxt_preprocess_input(&$variables) {
  // Set a placeholder for all search form elements.
  if ($variables['attributes']['type'] == 'search') {
    //$variables['attributes']['placeholder'] = t('Search the Consumer Hub');
  }
}
