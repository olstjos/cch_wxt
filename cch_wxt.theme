<?php
use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * WxT Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

/**
 * Implements hook_theme_suggestions_HOOK_alter for blocks.
 */
function cch_wxt_theme_suggestions_block_alter(&$suggestions, $variables) {

  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    //echo "<h1>$suggestion</h1>";
    $suggestion = str_replace('cch_wxt_', 'wxt_bootstrap_', $suggestion);
    //echo "<h1>$suggestion</h1>";
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter for page.
 */
/*
function cch_wxt_theme_suggestions_page_alter(&$suggestions, $variables) {

  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('THEMENAME_', 'wxt_bootstrap_', $suggestion);
    echo "<h1>$suggestion</h1>" . '<br/>';
  }
}
*/

function cch_wxt_preprocess_page(&$variables) {
}

function cch_wxt_preprocess(&$variables, $hook) {
  $variables['base_path'] = base_path();
}

/**
 * Implements template_preprocess_views_view_field().
 */
function cch_wxt_preprocess_views_view_field(&$variables) {
  $view = $variables['view'];
  $field = $variables['field'];

  if (1==2 && $view->id() == 'sector_browse' && $view->current_display == 'attachment_1') {
    switch($field->field)
    {
      case 'name':
      case 'field_image_sector':
        $regexp = '/sector\/term\/(\d+)?/is';
        if ( preg_match($regexp, $variables['output'], $matches) ) {
          $tid = $matches[1];
          $children = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadChildren($tid);
          $hasChildren = count($children) > 0;

          if (!$hasChildren) {
            $output = str_replace("sector/term", "sector/term/results", $variables['output']);
            $variables['output'] = \Drupal\Core\Render\Markup::create($output);
          }
        }
        break;
    }
  }
}

/**
 * Implements template_preprocess_views_view_table().
 */
function cch_wxt_preprocess_views_view_table(&$variables) {
  $view = $variables['view'];

  // Set header for results
  if ($view->id() == 'sector_browse' && $view->current_display == 'page_2') {
    $variables['header'] = [
      'consumer-info' => [
        'default_classes' => true,
        'content' => t('Consumer Information')
      ]
    ];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function cch_wxt_preprocess_breadcrumb(&$variables) {
  $request = \Drupal::request();
  $route_match = \Drupal::routeMatch();
  $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());
  $term = $route_match->getParameters();

  if ( $route_match->getParameter('view_id') && $route_match->getParameter('display_id') && $route_match->getParameter('arg_0') ) {
    /*
    $tid = $route_match->getParameter('arg_0');
    $tree = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('sector');
    foreach ($tree as $term) {
      $termID[] = [
        'termId' => $term->tid,
        'parent'=> reset($term->parents),
        'depth' => $term->depth
      ];
    }

    $parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents(3);
    $parent = reset($parent);
    echo get_class( $parent);
    print "<pre>";
    print_r($tree);
    die();
    */
  }

  /*
  $variables['#cache']['contexts'][] = 'url';
  if (count($variables['breadcrumb']) <= 1) {
    $variables['breadcrumb'] = [];
  } else {
    $breadcrumb_title = theme_get_setting('breadcrumb_title');
    if ($breadcrumb_title) {
      $variables['breadcrumb'][] = array(
        'text' => $page_title
      );
    }
  }
  */
}


/**
 * Implements template_preprocess_views_view().
 */
function cch_wxt_preprocess_views_view(&$variables) {
  $view = $variables['view'];
  $request = \Drupal::request();
  $routeMatch = \Drupal::routeMatch();
  $params = $routeMatch->getParameters();

  if ($view->id() == 'sector_browse' && $view->current_display == 'page_1') {
    $tid = $routeMatch->getParameter('arg_0');
    $termSector = Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
    /*
    print "<pre>";
    print_r( array_keys($variables) );
    die();
    */

    // If provincial sector, show the provincial exposed filter
    if ($termSector->field_provincial->value) {
      $variables['attachment_before'] = '';
    } else {
      $variables['exposed'] = '';
    }
    /*



    echo $tid;die();
    print "<pre>";
    print_r($params);
    print_r( array_keys($variables['exposed']) );
    print_r( array_keys($variables) );
    die();
    */
  }
}

function cch_wxt_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-sector-browse-page-1') {
    $form['#action'] = str_replace('sector/term', 'sector/term/results', $form['#action']);
  }
}